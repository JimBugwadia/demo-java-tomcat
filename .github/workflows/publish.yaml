name: build-sign-attest

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GRYPE_OUTPUT: cyclonedx
  GRYPE_QUIET: true

jobs:
  secure-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write   # This is the key for OIDC!

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
    
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Execute Gradle build
      run: ./gradlew build

    - name: Download build artifact
      uses: actions/download-artifact@v2

    - name: Generate provenance
      uses: slsa-framework/github-actions-demo@v0.1
      with:
        artifact_path: build/libs/service.war
        output_path: provenance.json

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=v1

    - name: Scan for vulnerabilities
      uses: anchore/scan-action@v3
      with:
        path: .
        fail-build: true
        severity-cutoff: critical
        
    - name: Generate SBOM
      uses: anchore/sbom-action@v0.6.0
      with:
        image: ${{ steps.meta.outputs.tags }}
        artifact-name: sbom.json
        format: cyclonedx-json

    - name: Push Docker image
      id: docker-build-push
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Install Cosign
      uses: sigstore/cosign-installer@v2.0.0
      with:
        cosign-release: 'v1.5.1'

    - name: Sign image
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: |          
        cosign sign --force \
        -a "repo=${{ github.repository }}" \
        -a "workflow=${{ github.workflow }}" \
        -a "ref=${{ github.sha }}" \
        ${{ steps.meta.outputs.tags }}

    - name : Attest SBOM
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: cosign attest --force --predicate sbom.json --type https://cyclonedx.org/bom  ${{ steps.meta.outputs.tags }}

    - name : Attest Vulnerability Scan
      env:
        COSIGN_EXPERIMENTAL: "true"    
      run: cosign attest --force --predicate scan.json --type https://grype.anchore.com/scan  ${{ steps.meta.outputs.tags }}

    - name : Attest Provenance
      env:
        COSIGN_EXPERIMENTAL: "true"    
      run: cosign attest --force --predicate provenance.json --type https://example.com/provenance  ${{ steps.meta.outputs.tags }}

